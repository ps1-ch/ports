$OpenBSD: patch-src_simple-scan_vala,v 1.9 2019/10/19 09:20:13 ajacoutot Exp $

No gusb on OpenBSD.

Index: src/simple-scan.vala
--- src/simple-scan.vala.orig
+++ src/simple-scan.vala
@@ -31,7 +31,6 @@ public class SimpleScan : Gtk.Application
 
     private ScanDevice? default_device = null;
     private bool have_devices = false;
-    private GUsb.Context usb_context;
     private AppWindow app;
     private Scanner scanner;
     private Book book;
@@ -66,17 +65,6 @@ public class SimpleScan : Gtk.Application
         scanner.scan_failed.connect (scanner_failed_cb);
         scanner.scanning_changed.connect (scanner_scanning_changed_cb);
 
-        try
-        {
-            usb_context = new GUsb.Context ();
-            usb_context.device_added.connect (() => { scanner.redetect (); });
-            usb_context.device_removed.connect (() => { scanner.redetect (); });
-        }
-        catch (Error e)
-        {
-            warning ("Failed to create USB context: %s\n", e.message);
-        }
-
         if (default_device != null)
         {
             List<ScanDevice> device_list = null;
@@ -99,7 +87,6 @@ public class SimpleScan : Gtk.Application
         base.shutdown ();
         book = null;
         app = null;
-        usb_context = null;
         scanner.free ();
     }
 
@@ -184,34 +171,8 @@ public class SimpleScan : Gtk.Application
 
     public string? suggest_driver ()
     {
-        if (usb_context == null)
-            return null;
-
-        var driver_map = new HashTable <uint32, string> (direct_hash, direct_equal);
-        add_devices (driver_map, brscan_devices, "brscan");
-        add_devices (driver_map, brscan2_devices, "brscan2");
-        add_devices (driver_map, brscan3_devices, "brscan3");
-        add_devices (driver_map, brscan4_devices, "brscan4");
-        add_devices (driver_map, samsung_devices, "samsung");
-        add_devices (driver_map, hpaio_devices, "hpaio");
-        add_devices (driver_map, epkowa_devices, "epkowa");        
-        var devices = usb_context.get_devices ();
-        for (var i = 0; i < devices.length; i++)
-        {
-            var device = devices.data[i];
-            var driver = driver_map.lookup (device.get_vid () << 16 | device.get_pid ());
-            if (driver != null)
-                return driver;
-        }
-
         return null;
     }
-
-    private void add_devices (HashTable<uint32, string> map, uint32[] devices, string driver)
-    {
-        for (var i = 0; i < devices.length; i++)
-            map.insert (devices[i], driver);
-    }   
 
     private void authorize_cb (Scanner scanner, string resource)
     {
