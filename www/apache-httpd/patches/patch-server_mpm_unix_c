$OpenBSD: patch-server_mpm_unix_c,v 1.3 2019/08/13 21:14:11 sthen Exp $

Index: server/mpm_unix.c
--- server/mpm_unix.c.orig
+++ server/mpm_unix.c
@@ -795,7 +795,7 @@ int ap_signal_server(int *exit_status, apr_pool_t *pco
             *exit_status = 1;
             return 1;
         }
-        status = "httpd (no pid file) not running";
+        status = "httpd2 (no pid file) not running";
     }
     else {
         /* With containerization, httpd may get the same PID at each startup,
@@ -804,12 +804,12 @@ int ap_signal_server(int *exit_status, apr_pool_t *pco
         if (otherpid != getpid() && kill(otherpid, 0) == 0) {
             running = 1;
             status = apr_psprintf(pconf,
-                                  "httpd (pid %" APR_PID_T_FMT ") already "
+                                  "httpd2 (pid %" APR_PID_T_FMT ") already "
                                   "running", otherpid);
         }
         else {
             status = apr_psprintf(pconf,
-                                  "httpd (pid %" APR_PID_T_FMT "?) not running",
+                                  "httpd2 (pid %" APR_PID_T_FMT "?) not running",
                                   otherpid);
         }
     }
@@ -833,7 +833,7 @@ int ap_signal_server(int *exit_status, apr_pool_t *pco
 
     if (!strcmp(dash_k_arg, "restart")) {
         if (!running) {
-            printf("httpd not running, trying to start\n");
+            printf("httpd2 not running, trying to start\n");
         }
         else {
             *exit_status = send_signal(otherpid, SIGHUP);
@@ -843,7 +843,7 @@ int ap_signal_server(int *exit_status, apr_pool_t *pco
 
     if (!strcmp(dash_k_arg, "graceful")) {
         if (!running) {
-            printf("httpd not running, trying to start\n");
+            printf("httpd2 not running, trying to start\n");
         }
         else {
             *exit_status = send_signal(otherpid, AP_SIG_GRACEFUL);
