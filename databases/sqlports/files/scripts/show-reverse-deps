#! /bin/sh
# $OpenBSD: show-reverse-deps,v 1.7 2019/10/03 12:41:22 kn Exp $
#
# Copyright (c) 2018 Marc Espie <espie@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# compute reverse dependencies
# XXX this is not perfect yet! it *does* require collating lib-depends over
# multi-packages setup, which this is NOT doing yet, but it is close to
# actually doing it.
# we just require a few more views for that.

set -e
if [ $# -eq 0 ]
then
    echo 2>&1 "Usage: show-reverse-deps pkgpath [sqlite_db]"
    exit 1
fi
if [ $# -ge 2 ]
then
    file=$2
else
    file=${TRUEPREFIX}/share/sqlports
fi
sqlite3 "$file" <<EOSQL
with recursive d (fullpkgpath, dependspath) as
	(select root.fullpkgpath, root.dependspath 
		from _canonical_depends root
			join _paths 
			    on root.dependspath=_paths.canonical
			join _paths p2 
			    on p2.fullpkgpath="$1" and p2.id=_paths.pkgpath
	    union
	    select child.fullpkgpath, child.dependspath
	    from d parent, _canonical_depends child  
	    	where parent.fullpkgpath=child.dependspath)
select distinct(_paths.fullpkgpath) from d 
    join _paths 
	on _paths.id=d.fullpkgpath
order by _paths.fullpkgpath;
EOSQL
